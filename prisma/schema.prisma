generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?
  image        String?
  passwordHash String?
  role         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  moodLogs  MoodLog[]
  posts     Post[]
  sessions  Session[]
  enrollments Enrollment[]
}

model MoodLog {
  id        String   @id @default(cuid())
  userId    String
  createdAt DateTime @default(now())
  mood      Int
  note      String?
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  title     String
  startedAt DateTime @default(now())
  completed Boolean  @default(false)
  summary   String?
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Community {
  id          String   @id @default(cuid())
  slug        String   @unique
  name        String
  description String?
  posts       Post[]
}

model Post {
  id          String     @id @default(cuid())
  userId      String
  communityId String
  createdAt   DateTime   @default(now())
  content     String

  User      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Community Community @relation(fields: [communityId], references: [id], onDelete: Cascade)
}

model GroupSession {
  id          String   @id @default(cuid())
  title       String
  startsAt    DateTime
  capacity    Int      @default(50)
  description String?
  enrollments Enrollment[]
}

model Enrollment {
  id             String       @id @default(cuid())
  userId         String
  groupSessionId String
  createdAt      DateTime     @default(now())

  User         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  GroupSession GroupSession @relation(fields: [groupSessionId], references: [id], onDelete: Cascade)
}
